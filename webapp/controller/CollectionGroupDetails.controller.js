sap.ui.define([
	"sap/ui/core/mvc/Controller",
	"sap/ui/core/routing/History", "sap/ui/Device", 'sap/ui/model/Filter', 'sap/m/Dialog',
	"sap/m/MessageBox",
	"sap/m/MessageToast",
	"sap/ui/core/routing/HashChanger"
], function(Controller, History, Device, Filter, Dialog, MessageBox, MessageToast,HashChanger) {
	"use strict";
	var oComponent;
	return Controller.extend("demonewcassini.controller.CollectionGroupDetails", {

		onInit: function() {
			oComponent = this.getOwnerComponent();

			this.getOwnerComponent().getRouter().getRoute("CollectionGroupDetails").attachPatternMatched(this._onRouteMatched, this);
			var oModel = this.getOwnerComponent().getModel("CollectionGroupInformation");
			this.getView().setModel(oModel);

			var OperationModel = new sap.ui.model.json.JSONModel();
			this.getView().setModel(OperationModel, "OperationModel");

			OperationModel.setProperty("/save", false);
			OperationModel.setProperty("/agreement", false);
			OperationModel.setProperty("/standalone", true);
			this.createdGroupId = 22000010;

			var oDateModel = new sap.ui.model.json.JSONModel({
				currentDate: new Date().toLocaleDateString(),
				currentTime: new Date().toLocaleTimeString()
			});
			this.getView().setModel(oDateModel, "DateModel");
			var oUpdateModel = new sap.ui.model.json.JSONModel({
				currentStat: false
			});
			this.getView().setModel(oUpdateModel, "UpdateModel");

		},
		_onRouteMatched: function(oEvent) {
			this.groupId = oEvent.getParameter("arguments").groupId;
			if (this.groupId) {
				//this.getView().byId("grpDesc").setValue("");
				
				var sMatchProd = this.groupId;
				if(sMatchProd === "-1"){
					sMatchProd = "";
				}
				var oGrpModel = new sap.ui.model.json.JSONModel({
					currentGrp: sMatchProd
				});
				
				this.getView().setModel(oGrpModel, "GroupModel");
				
				this.getView().byId("CollectionGroupDetails").bindElement("/CollectionGroupInformation/" + this.groupId);
				var OperationModel = this.getView().getModel("OperationModel");
				if (this.groupId < 0) {
					OperationModel.setProperty("/standalone", false);
					OperationModel.setProperty("/save", true);
					OperationModel.setProperty("/operation", "AddGroup");
					//this.addNewGroup();
				} else {
					OperationModel.setProperty("/standalone", true);
					OperationModel.setProperty("/save", false);
				}
			
			var aFilter = [];
			aFilter.push(new Filter("Prodno", sap.ui.model.FilterOperator.EQ, sMatchProd));
			var oModel = this.getView().getModel("prodH");
			var that = this;
			oModel.read("/PROD_HEADERSet", {
				filters: aFilter,
				urlParameters: {
					"$expand": "PROD_HEADERTOPROD_HIERARCHY"
				},
				success: that._onUpdateEntrySuccess.bind(that),
				error: function(oData) {
					console.log("error");
				}

				});
			}
		},
		_onUpdateEntrySuccess: function(oObject) {
			var productHierarchySets = [];
			var oObjData = oObject.results[0].PROD_HEADERTOPROD_HIERARCHY;
			this.getView().byId("grpDesc").setValue(oObject.results[0].Description);
			this.getView().byId("grpDesc").setEditable(false);
			for (var i = 0; i < oObjData.results.length; i++) {
				var item = oObjData.results[i];
				productHierarchySets.push(item);
			}
			var oProductHierarchySetsModel = oComponent.getModel('productHierarchySets').getProperty("/");
			for (var len = 0; len < productHierarchySets.length; len++) {
				oProductHierarchySetsModel.push(productHierarchySets[len]);
			}
			oComponent.getModel('productHierarchySets').setProperty("/", oProductHierarchySetsModel);
			//MessageToast.show("Successfully created new entry!");
			console.log("onCreateEntrySuccess");
		},

		OnNavigateHome: function(oEvent) {

			this.getOwnerComponent().getRouter().navTo("CollectionGroupList", {}, true);
		},

		handleItemDelete: function(oEvent) {
			//This code was generated by the layout editor.
			var path = oEvent.getSource().getParent().getParent().getBindingContextPath();
			path = path.substring(1,2);
			var oModel = this.getView().getModel("productHierarchySets");
			var oData = oModel.getData();
			oData.splice(path,1);
			oModel.setData(oData);
		},
		/*addNewGroup: function() {

			var CollectionGroupModel = this.getView().getModel();
			var data = CollectionGroupModel.getData();
			var date = new Date();
			data.CollectionGroupInformation.push({
				groupId: this.createdGroupId,
				documentDate: date.getFullYear() + "-" + date.getMonth() + "-" + date.getDate(),
				CreatedBy: "Snehal Kendre",
				NoOfItems: 0,
				Items: []
			});
			CollectionGroupModel.setData(data);
			this.groupId = (data.CollectionGroupInformation.length - 1);
			var path = "/CollectionGroupInformation/" + this.groupId;
			this.getView().byId("CollectionGroupDetails").bindElement(path);

		},*/

		OnEditGroup: function() {
			var OperationModel = this.getView().getModel("OperationModel");
			OperationModel.setProperty("/standalone", false);
			OperationModel.setProperty("/save", true);
			OperationModel.setProperty("/operation", "EditGroup");
			this.getView().byId("grpDesc").setEditable(true);
			this.getView().getModel("UpdateModel").setProperty("/currentStat",true);
			

		},
		OnCancelSaveGroup: function(oEvent) {
			var OperationModel = this.getView().getModel("OperationModel");
			OperationModel.setProperty("/standalone", true);
			OperationModel.setProperty("/save", false);
			this.getView().byId("grpDesc").setValue("");
			var operation = OperationModel.getProperty("/operation");
			if (operation === "AddGroup") {

			/*	var model = this.getView().getModel();
				var data = model.getData();
				var path = (data.CollectionGroupInformation.length - 1);
				data.CollectionGroupInformation.splice(path, 1);
				model.setData(data);*/
				this.getOwnerComponent().getRouter().navTo("CollectionGroupList", {}, true);
			}
			
		},
		OnSaveGroup: function() {
			var bStat = this.getView().getModel("UpdateModel").getProperty("/currentStat");
			if(bStat){
				//update
				console.log("update");
			} else {
			var sGrpDesc = this.getView().byId("grpDesc");
			if(sGrpDesc.getValue()){
			//Create all the records added to table via Json model
			var oTable = this.getView().byId("ColletionItems");
			// Get Items of the Table
			var oModel = oComponent.getModel('productHierarchySets');
			var aItems = oTable.getItems();
			// Define an empty Array
			var itemData = [];

			for (var iRowIndex = 0; iRowIndex < aItems.length; iRowIndex++) {
				var l_Spras = "EN";
				var l_Prodh1 = oModel.getProperty("/" + iRowIndex + "/Prodh1");
				var l_Prodh2 = oModel.getProperty("/" + iRowIndex + "/Prodh2");
				var l_Prodh3 = oModel.getProperty("/" + iRowIndex + "/Prodh3");
				var l_Prodh4 = oModel.getProperty("/" + iRowIndex + "/Prodh4");
				var l_Vtext1 = oModel.getProperty("/" + iRowIndex + "/Vtext1");
				var l_Vtext2 = oModel.getProperty("/" + iRowIndex + "/Vtext2");
				var l_Vtext3 = oModel.getProperty("/" + iRowIndex + "/Vtext3");
				var l_Vtext4 = oModel.getProperty("/" + iRowIndex + "/Vtext4");
				var l_Bname = "MOB17";

				itemData.push({
					Prodh1: l_Prodh1,
					Prodh2: l_Prodh2,
					Prodh3: l_Prodh3,
					Prodh4: l_Prodh4,
					Vtext1: l_Vtext1,
					Vtext2: l_Vtext2,
					Vtext3: l_Vtext3,
					Vtext4: l_Vtext4,
					Spras: l_Spras,
					Bname: l_Bname

				});
			}
			var oEntry1 = {};

			oEntry1.Createdby = "MOB17";
			oEntry1.Description = this.getView().byId("grpDesc").getValue();
			oEntry1.PROD_HEADERTOPROD_HIERARCHY = itemData;

			var oModelCreate = this.getView().getModel("prodH");
			oModelCreate.create("/PROD_HEADERSet", oEntry1, {
				success: this._onCreateEntrySuccess.bind(this),
				error: this._onCreateEntryError.bind(this)
			});
			 this.getView().getModel("UpdateModel").setProperty("/currentStat",false);
			 
			 var OperationModel = this.getView().getModel("OperationModel");
			OperationModel.setProperty("/standalone", true);
			OperationModel.setProperty("/save", false);
			
			 
			} else {
				this.getView().byId("grpDesc").setValueState(sap.ui.core.ValueState.Error);
				MessageToast.show("Description is Mandatory");
			  }
			}
		},
		_onCreateEntrySuccess: function(oObject, oResponse) {
			var successObj = oResponse.data.Prodno;
			MessageToast.show("Successfully " + successObj + " created new entry!");
			var oModel = oComponent.getModel("productHierarchySets");
			oModel.setData([]);
			this.getView().getModel("prodH").refresh();
			this.getView().byId("grpDesc").setValue("");
			this.getView().byId("grpDesc").setValueState(sap.ui.core.ValueState.None);
			/*HashChanger.getInstance().replaceHash("Clearpage");
			var oHistory = History.getInstance();
			oHistory._reset;*/
		},
		_onCreateEntryError: function(oError) {
			MessageBox.error(
				"Error creating entry: " + oError.statusCode + " (" + oError.statusText + ")", {
					details: oError.responseText
				}
			);
			console.log("onCreateEntryError", oError);
		},
		onNavBack: function() {
			var sPreviousHash = History.getInstance().getPreviousHash();

			//The history contains a previous entry
			if (sPreviousHash !== undefined) {
				history.go(-1);
			} else {
				// There is no history!
				// Naviate to master page
				this.getOwnerComponent().getRouter().navTo("CollectionGroupList", {}, true);
			}
		},
		onNavigateAddItem: function(oEvent) {
			var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			// var id = oEvent.getSource().getParent().getBindingContext().sPath.substring(28);
			oRouter.navTo("AddCollectionItem", {
				groupId: this.groupId
			});
			
		},
		handleItemEdit: function(oEvent) {
			// var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			// // var id = oEvent.getSource().getParent().getBindingContext().sPath.substring(28);
			// oRouter.navTo("AddCollectionItem", {
			// 	groupId: this.groupId,
			// 	itemId: oEvent.getSource().getParent().getBindingContext().sPath.substring(36)
			// });

			var itemPath = oEvent.getSource().getParent().getParent().getBindingContextPath();
			var oSelectedItem = this.getView().getModel().getProperty(itemPath);

			this.getView().getModel("filterModel").setProperty("/selecteRecordItemPath", itemPath);

			this.getView().getModel("filterModel").setProperty("/namingDescription", oSelectedItem.namingDescription);
			this.getView().getModel("filterModel").setProperty("/namingkey", oSelectedItem.namingkey);
			this.getView().getModel("filterModel").setProperty("/brandDescription", oSelectedItem.brandDescription);
			this.getView().getModel("filterModel").setProperty("/brandkey", oSelectedItem.brandkey);
			this.getView().getModel("filterModel").setProperty("/qualityGroupDescription", oSelectedItem.qualityGroupDescription);
			this.getView().getModel("filterModel").setProperty("/qualityGroupkey", oSelectedItem.qualityGroupkey);
			this.getView().getModel("filterModel").setProperty("/qualityDescription", oSelectedItem.qualityDescription);
			this.getView().getModel("filterModel").setProperty("/qualitykey", oSelectedItem.qualitykey);
			this.getView().getModel("filterModel").setProperty("/bottleSizeDescription", oSelectedItem.bottleSizeDescription);
			this.getView().getModel("filterModel").setProperty("/bottleSizekey", oSelectedItem.bottleSizekey);
			this.getView().getModel("filterModel").setProperty("/materialDescription", oSelectedItem.materialDescription);
			this.getView().getModel("filterModel").setProperty("/materialkey", oSelectedItem.materialkey);

			if (!this.oDialog) {
				this.oDialog = sap.ui.xmlfragment("demonewcassini.view.EditCollectionPopUp", this);
				this.getView().addDependent(this.oDialog);
			}

			// toggle compact style for the dialog
			jQuery.sap.syncStyleClass("sapUiSizeCompact", this.getView(), this.oDialog);
			this.oDialog.open();
		},

		onUpdateCollectionItem: function() {

			var filterModel = this.getView().getModel("filterModel");
			var oModel = this.getView().getModel();

			var oSelectedItem = oModel.getProperty(filterModel.getProperty("/selecteRecordItemPath"));

			oSelectedItem.namingDescription = filterModel.getProperty("/namingDescription");
			oSelectedItem.namingkey = filterModel.getProperty("/namingkey");

			oSelectedItem.brandDescription = filterModel.getProperty("/brandDescription");
			oSelectedItem.brandkey = filterModel.getProperty("/brandkey");

			oSelectedItem.qualityGroupDescription = filterModel.getProperty("/qualityGroupDescription");
			oSelectedItem.qualityGroupkey = filterModel.getProperty("/qualityGroupkey");

			oSelectedItem.qualityDescription = filterModel.getProperty("/qualityDescription");
			oSelectedItem.qualitykey = filterModel.getProperty("/qualitykey");

			oSelectedItem.bottleSizeDescription = filterModel.getProperty("/bottleSizeDescription");
			oSelectedItem.bottleSizekey = filterModel.getProperty("/bottleSizekey");

			oSelectedItem.materialDescription = filterModel.getProperty("/materialDescription");
			oSelectedItem.materialkey = filterModel.getProperty("/materialkey");

			oModel.refresh();
			this.oDialog.close();
		},
		onCloseEditDialog: function() {
			this.oDialog.close();
		},
		handleValueHelp: function(oEvent) {

			var sInputValue = oEvent.getSource().getValue();
			this.inputId = oEvent.getSource().getId();
			this.updateSearchHelpValue(this.inputId);
			// create value help dialog
			if (!this._valueHelpDialog) {
				this._valueHelpDialog = sap.ui.xmlfragment("demonewcassini.view.SearchHelp", this);
				this.getView().addDependent(this._valueHelpDialog);
			}

			//	create a filter for the binding
			this._valueHelpDialog.getBinding("items").filter([new Filter(
				"ddtext",
				sap.ui.model.FilterOperator.Contains, ""
			)]);

			// open value help dialog filtered by the input value
			this._valueHelpDialog.open(sInputValue);
		},

		updateSearchHelpValue: function(inputField) {
			var CollectionSearchHelp;
			var oModel;
			var parent;
			var result;
			if (inputField.includes("inp_naming")) {
				oModel = this.getOwnerComponent().getModel("Naming");
				result = oModel.getData().ListItems;
				CollectionSearchHelp = new sap.ui.model.json.JSONModel(result);
				this.getView().setModel(CollectionSearchHelp, "CollectionSearchHelp");
			} else if (inputField.includes("inp_brand")) {
				parent = this.getView().getModel("filterModel").getProperty("/namingkey");
				oModel = this.getOwnerComponent().getModel("Brands");
				if (parent === undefined) {
					result = oModel.getData().ListItems;
				} else {
					result = jQuery.grep(oModel.getData().ListItems, function(e) {
						return e.parent === parent;
					});
				}
				CollectionSearchHelp = new sap.ui.model.json.JSONModel(result);
				this.getView().setModel(CollectionSearchHelp, "CollectionSearchHelp");
			} else if (inputField.includes("inp_qualityGroup")) {
				parent = this.getView().getModel("filterModel").getProperty("/brandkey");
				oModel = this.getOwnerComponent().getModel("QualityGroup");
				if (parent === undefined) {
					result = oModel.getData().ListItems;
				} else {
					result = jQuery.grep(oModel.getData().ListItems, function(e) {
						return e.parent === parent;
					});
				}
				CollectionSearchHelp = new sap.ui.model.json.JSONModel(result);
				this.getView().setModel(CollectionSearchHelp, "CollectionSearchHelp");
			} else if (inputField.includes("inp_quality1")) {
				parent = this.getView().getModel("filterModel").getProperty("/qualityGroupkey");
				oModel = this.getOwnerComponent().getModel("Quality");
				if (parent === undefined) {
					result = oModel.getData().ListItems;
				} else {
					result = jQuery.grep(oModel.getData().ListItems, function(e) {
						return e.parent === parent;
					});
				}
				CollectionSearchHelp = new sap.ui.model.json.JSONModel(result);
				this.getView().setModel(CollectionSearchHelp, "CollectionSearchHelp");

			} else if (inputField.includes("inp_bottleSize")) {
				parent = this.getView().getModel("filterModel").getProperty("/qualitykey");
				oModel = this.getOwnerComponent().getModel("BottleSize");
				if (parent === undefined) {
					result = oModel.getData().ListItems;
				} else {
					result = jQuery.grep(oModel.getData().ListItems, function(e) {
						return e.parent === parent;
					});
				}
				CollectionSearchHelp = new sap.ui.model.json.JSONModel(result);
				this.getView().setModel(CollectionSearchHelp, "CollectionSearchHelp");

			} else if (inputField.includes("inp_Material")) {
				// parent = this.getView().getModel("filterModel").getProperty("/namingkey");
				oModel = this.getOwnerComponent().getModel("Materials");
				// if (parent === undefined) {
				result = oModel.getData().ListItems;
				// } else {
				// 	result = jQuery.grep(oModel.getData().ListItems, function(e) {
				// 		return e.parent === parent;
				// 	});
				// }
				CollectionSearchHelp = new sap.ui.model.json.JSONModel(result);
				this.getView().setModel(CollectionSearchHelp, "CollectionSearchHelp");

			}

		},
		_handleValueHelpSearch: function(evt) {
			var sValue = evt.getParameter("value");
			var oFilter = new Filter(
				"ddtext",
				sap.ui.model.FilterOperator.Contains, sValue
			);
			evt.getSource().getBinding("items").filter([oFilter]);
		},

		_handleValueHelpClose: function(evt) {
			var oSelectedItem = evt.getParameter("selectedItem");
			if (oSelectedItem) {
				var productInput = this.inputId;
				if (productInput.includes("inp_naming")) {
					this.getView().getModel("filterModel").setProperty("/namingDescription", oSelectedItem.getTitle());
					this.getView().getModel("filterModel").setProperty("/namingkey", oSelectedItem.getDescription());
				} else if (productInput.includes("inp_brand")) {
					this.getView().getModel("filterModel").setProperty("/brandDescription", oSelectedItem.getTitle());
					this.getView().getModel("filterModel").setProperty("/brandkey", oSelectedItem.getDescription());
				} else if (productInput.includes("inp_qualityGroup")) {
					this.getView().getModel("filterModel").setProperty("/qualityGroupDescription", oSelectedItem.getTitle());
					this.getView().getModel("filterModel").setProperty("/qualityGroupkey", oSelectedItem.getDescription());
				} else if (productInput.includes("inp_quality1")) {
					this.getView().getModel("filterModel").setProperty("/qualityDescription", oSelectedItem.getTitle());
					this.getView().getModel("filterModel").setProperty("/qualitykey", oSelectedItem.getDescription());
				} else if (productInput.includes("inp_bottleSize")) {
					this.getView().getModel("filterModel").setProperty("/bottleSizeDescription", oSelectedItem.getTitle());
					this.getView().getModel("filterModel").setProperty("/bottleSizekey", oSelectedItem.getDescription());
				} else if (productInput.includes("inp_Material")) {
					this.getView().getModel("filterModel").setProperty("/materialDescription", oSelectedItem.getTitle());
					this.getView().getModel("filterModel").setProperty("/materialkey", oSelectedItem.getDescription());
				}

			}
			evt.getSource().getBinding("items").filter([]);
		}

	});

});